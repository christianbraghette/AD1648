NGame = {
	START_DATE = "1648.1.1" 

}


#修改省份合并速度
NCountry = {
	INCORPORATION_TIME_SAME_CULTURE = 1			# Years if the state is a Homeland of one of the country's primary cultures
	INCORPORATION_TIME_SAME_HERITAGE = 5			# Years if the state is a Homeland of a culture that matches of one of the country's primary cultures' Heritage traits
	INCORPORATION_TIME_SAME_TRAIT = 10				# Years if the state is a Homeland of a culture with any trait in common with a country's primary cultures
	INCORPORATION_TIME_NO_MATCH = 20				# Years if the state's Homeland cultures have nothing in common with the country's primary cultures
	JOURNAL_ENTRY_UPDATE_ACTIVE = 4					# Number of ticks between each update of Active (Possible) Journal Entries, can be overriden on journal entry type
	JOURNAL_ENTRY_UPDATE_INACTIVE = 14				# Number of ticks between each update of Inactive Journal Entries, can be overriden on journal entry type
}


##减少省份合并花费
NPolitics = {

	STATE_BUREAUCRACY_BASE_COST = 5		# The base cost per incorporated state
	STATE_BUREAUCRACY_POP_BASE_COST = 2		# The base BUR multiplier per population multiple
	STATE_BUREAUCRACY_POP_MULTIPLE = 100000	# Number of people BUR cost is based on
	MINIMUM_INVESTMENT_COST = 10			# The absolute minimum cost in BUR per investment level
	RETIRE_COMMANDER_CONSEQUENCE_DURATION = 1	# Number of years during which an Interest Group will be concerned about the retirement of one of their Commanders
}

##科技传播
NTechnology = {
	TECH_SPREAD_RANDOM_RANGE = 0.5 # 技術傳播的分佈每周可以變化多少
	TECH_AHEAD_OF_TIME_PENALTY_FACTOR = 0.3	# 對於前一個時代尚未在該類別中研究過的每項技術，將成本的倍數作為額外懲罰（乘以技術之間的時代數）
}

##降低战争恶名
NDiplomacy = {
	WAR_GOAL_INFAMY_CONQUER_STATE = 5.0
	WAR_GOAL_INFAMY_RETURN_STATE = 0.5
	WAR_GOAL_INFAMY_TAKE_TREATY_PORT = 1
	WAR_GOAL_INFAMY_MAKE_PUPPET = 3
	WAR_GOAL_INFAMY_MAKE_VASSAL = 3
	WAR_GOAL_INFAMY_MAKE_DOMINION = 3
	WAR_GOAL_INFAMY_TRANSFER_SUBJECT = 1.5	
	WAR_GOAL_INFAMY_ANNEX_COUNTRY = 4.0
	WAR_GOAL_INFAMY_UNIFICATION = 0.5
	WAR_GOAL_INFAMY_REGIME_CHANGE = 0.5
	
	WAR_GOAL_INFAMY_DIPLO_PLAY_BACK_DOWN_REFUND = -0.75 # Refund of infamy for war goals that are dropped due to one side backing down in a diplo play (applied to initiator/target)
	WAR_GOAL_INFAMY_DIPLO_PLAY_BACKER_REFUND = -1.00 	# Refund of infamy for war goals that are dropped for backers in a diplo play (due to play not escalating to war or backer switching sides)
	WAR_GOAL_INFAMY_PEACE_REFUND = -0.5 				# Refund of infamy for war goals that are dropped due to a country capitulating or negotating peace without enforcing their wargoal
	WAR_GOAL_INFAMY_REDUCTION_FOR_TARGET = -0.5 		# This much of a war goal's infamy value is removed from the target when target has it enforced on them	
	
	WAR_GOAL_INFAMY_POPULATION_SCALING_FACTOR = 10000 # The amount of population by which the factor below is multiplied
	WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER = 0.02 # For each WAR_GOAL_INFAMY_POPULATION_SCALING_FACTOR population in a country/state, multiply infamy by this
	WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER_MAX_PER_STATE = 4 # Infamy population multiplier can't be higher than this for each state affected
	WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER_MAX_TOTAL = 25 # Infamy population multiplier can't be higher than this, regardless of number of states affected
	WAR_GOAL_INFAMY_HOMELAND_FACTOR = -0.5 # Infamy is adjusted by this if the states taken/puppeted etc are Homelands of the aggressor
	WAR_GOAL_INFAMY_OWN_SUBJECT_MULT = 0.1 # Infamy is multiplied by this for wargoals targeting your own subject
	WAR_GOAL_INFAMY_RELATIONS_TARGET_IMPACT = -1 # Each point of infamy generated by an incident also has this impact on relations with the target
	WAR_GOAL_INFAMY_RELATIONS_INTEREST_IMPACT = -0.5 # Each point of infamy generated by an incident also has this impact on relations with countries that have an interest in the target 
}


NAI = {
		#AI动员标准
	RECRUITABLE_COMMANDER_FAVORED_IG_FACTOR	= 1		# If a recruitable commander comes from an IG the AI likes, multiply score by this
	RECRUITABLE_COMMANDER_DISFAVORED_IG_FACTOR = 1	# If a recruitable commander comes from an IG the AI dislikes, multiply s

	MOBILIZATION_BASE_DESIRED_RATIO_TO_ENEMY = 1   		# AI wants to have a total amount of mobilized army power that is equal to enemy mobilized army power * this
	MOBILIZATION_MINOR_ALLY_ADVANTAGE_TO_NOT_MOBILIZE = 4	# If a minor ally's side in the conflict has at least this army power advantage when their forces are not counted in, don't bother mobilizing
 	MOBILIZATION_MIN_ESCALATION_START = 100 	# Before this amount of escalation in a play, AI will only mobilize as a response to the enemy mobilizing (base)

	BASE_AGGRESSION = 10  #每次檢查目標時 AI 都會考慮開始外交遊戲的基本機會 (1 = 1%)
	UNIFICATION_AGGRESSION_MULT_HIGHER_TIER = 40 # AI 侵略乘以這個來計算他們是否應該嘗試開始統一/領導遊戲，如果這個國家最終會形成一個更高級別的國家
	UNIFICATION_AGGRESSION_MULT_SAME_TIER = 2 AI 侵略乘以這個來計算他們是否應該嘗試開始統一/領導遊戲，如果這個國家最終會形成一個相同等級的國家
	START_DIPLO_PLAY_POTENTIAL_ALLY_STRENGTH_WEIGHT = 0.2 # 考慮那些可能會因為他們的力量而偏向我們這邊的參與者

	
	# AI 將以相對於敵人的戰鬥力和整體士氣的幾分之一進行攻擊
	FRONT_STRENGTH_FACTOR_TO_INVADE = 1
	FRONT_MIN_MORALE_TO_ATTACK = 0.75	
	
	LOW_AGGRESSION_BASE_EFFECT_MULT = 1 # 低 AI 攻擊性遊戲規則對 AI 開始外交遊戲的頻率的影響
	HIGH_AGGRESSION_BASE_EFFECT_MULT = 1.5 # 高 AI 攻擊性遊戲規則對 AI 開始外交遊戲的頻率的影響
	LOW_AGGRESSION_INFAMY_ACCEPTANCE_MULT = 1 # 對於低攻擊性 AI，AI 認為不受歡迎/不可接受的臭名昭著的數量乘以此值
	HIGH_AGGRESSION_INFAMY_ACCEPTANCE_MULT = 1.5 # The amount of infamy the AI considers undesirable/unacceptable is multiplied by this for low aggression AI
	AI_AGGRESSION_MAX_ACCEPTABLE_INFAMY = 100 # Undesirable/unacceptable infamy will not be set above this from high aggression
	DIPLO_PLAY_BACK_DOWN_GUARANTEED_THRESHOLD = -80 #-50 -> -80 # 如果（信心+膽量）小於這個，總是在戲開戰前退縮
	DIPLO_PLAY_BACK_DOWN_CHANCE_ESCALATION = 60 # 30 -> 60 #在此升級之上，人工智能將考慮讓步
	DIPLO_PLAY_BACK_DOWN_GUARANTEED_ESCALATION = 95 # 在這種升級之上，人工智能總是會退縮，如果它應該
	DIPLO_PLAY_BACK_DOWN_CHANCE_LOW_ESCALATION = 0.1 # 1.0 = 1%（每次跳動的機會）- 在戰爭開始倒計時之前使用
	DIPLO_PLAY_BACK_DOWN_CHANCE_HIGH_ESCALATION = 0.5 # 1.0 = 1% (chance each tick) - used after countdown to war starts
	DIPLO_PLAY_BACK_DOWN_CHANCE_WAR_LOSSES_MULT = 0.01 # 0.05 -> 0.01 #增加因額外戰爭目標要求而退縮的機會（1 + 這個 * 額外戰爭目標的相對影響）
	DIPLO_PLAY_BACK_DOWN_CHANCE_WAR_LOSSES_MAX = 1.0 # 3 -> 1額外戰爭目標需求影響的最大乘數（包括 1 的基數）
	DIPLO_PLAY_TAKE_SIDES_MIN_BOLDNESS = 50 # 25 Boldness must be at least this for AI to want to take a side with no gain
	
	#以下是AI
	MIN_AVAILABLE_LABOR_FOR_NEW_BUILDING = 5000		# If state has less than this in available labor, don't bother building anything (multiplied by 1 + number of ongoing constructions)
	
	CONSCRIPTION_ESTIMATED_MILITARY_POWER_MULT = 0.75 #0.5->0.75		# AI multiplies the value of conscriptable battalions by this to estimate potential combat power
	
	RAISE_TAX_TO_DESIRED_INCOME_THRESHOLD = 1 #1.25 ->1
	RAISE_TAX_ABOVE_DESIRED_INCOME_NO_DEBT_THRESHOLD = 0.9
	RAISE_TAX_ABOVE_DESIRED_INCOME_WITH_DEBT_THRESHOLD = 1.1
	LOWER_TAX_TO_DESIRED_INCOME_THRESHOLD = 1.5
	LOWER_TAX_BELOW_DESIRED_INCOME_THRESHOLD = 2.0
	RAISE_TAX_HIGH_DEBT_OVERRIDE_RATIO = 0.2 # At this amount of debt, any level of tax is OK to deal with it
	
	CONSTRUCTION_MAX_NUM_NON_GOVERNMENT_CONSTRUCTIONS_BASE = 1 # If country has this number of non-government building constructions queued, don't add anymore (base)
	CONSTRUCTION_MAX_NUM_NON_GOVERNMENT_CONSTRUCTIONS_SCALED = 0.05 # 如果國家有這個數量的非政府建築排隊等候，不要再添加（按建築產量縮放）
	CONSTRUCTION_MAX_NUM_NON_GOVERNMENT_CONSTRUCTIONS_SCALED_MAX = 10 #19 ->10 CONSTRUCTION_MAX_NUM_NON_GOVERNMENT_CONSTRUCTIONS_SCALED can't be higher than this	
	CONSTRUCTION_MAX_NUM_GOVERNMENT_CONSTRUCTIONS_BASE = 1 # If country has this number of government building constructions queued, don't add anymore (base)
	CONSTRUCTION_MAX_NUM_GOVERNMENT_CONSTRUCTIONS_SCALED = 2 #0.05->2 # If country has this number of government building constructions queued, don't add anymore (scaled by construction production)
	CONSTRUCTION_MAX_NUM_GOVERNMENT_CONSTRUCTIONS_SCALED_MAX = 19 # CONSTRUCTION_MAX_NUM_GOVERNMENT_CONSTRUCTIONS_SCALED can't be higher than this	
	CONSTRUCTION_RESERVES_NEW_CONSTRUCTIONS = 0.5 #0.2->0.5 # 如果在加上新建築的成本後黃金儲備少於這個，不要排隊
	CONSTRUCTION_DEBT_RESUME = 0 #0.2 -> 0 如果暫停建設，一旦債務相對於上限如此之低就恢復建設
	CONSTRUCTION_DEBT_PAUSE = 0.2 #0.4 -> 0.2 如果債務與債務上限的比例如此之高，則暫停所有非關鍵建設
	CONSTRUCTION_DEBT_RESUME_CRITICAL_CONSTRUCTION = 0.2 #0.75 -> 0.2 # 如果暂停关键建设，一旦债务相对于上限如此低就恢复
	CONSTRUCTION_DEBT_PAUSE_CRITICAL_CONSTRUCTION = 0.3 #0.9 -> 0.3 # 如果债务与债务上限的比例如此之高，请暂停所有关键建设 	
	
	# Below data is used to calculate how much weight the AI places on different things it can spend its weekly money income on
	MONEY_SPENDING_RANDOM_FACTOR = 2.0 # 这个值越高，新的 AI 金钱支出就越随机
	MONEY_SPENDING_MAX_RATIO_TO_REMOVE_SHOULD_HAVE = 0.01 #1.05 AI 需要考虑减少“应该拥有”的支出的收支比有多低
	MONEY_SPENDING_MAX_RATIO_TO_REMOVE_WANTS_TO_HAVE = 0.03 #1.10 AI 需要考虑减少“想要拥有”的开支
	MONEY_SPENDING_MAX_RATIO_TO_REMOVE_NICE_TO_HAVE = 0.05 #1.20 AI 需要考虑减少“可有可无”的支出的收入支出比有多低
	MONEY_SPENDING_MIN_RATIO_TO_ADD_SHOULD_HAVE = 1.5 #1.2 在增加“应该有”项目的支出后，人工智能希望拥有多少收支比
	MONEY_SPENDING_MIN_RATIO_TO_ADD_WANTS_TO_HAVE = 1.7 #1.3-># 在增加“想要拥有”项目的支出后，人工智能希望拥有多少收支比
	MONEY_SPENDING_MIN_RATIO_TO_ADD_NICE_TO_HAVE = 2 #1.4-> # 在增加“可有可无”项目的支出后，人工智能希望收支比达到多少
	MONEY_SPENDING_MIN_SURPLUS_TO_ADD_SHOULD_HAVE = 5000 #2000-> 在增加“应该有”项目的支出后，人工智能希望拥有多少绝对资金盈余
	MONEY_SPENDING_MIN_SURPLUS_TO_ADD_WANTS_TO_HAVE = 10000 #5000-> 在增加“想要拥有”项目的支出后，人工智能希望拥有多少绝对资金盈余
	MONEY_SPENDING_MIN_SURPLUS_TO_ADD_NICE_TO_HAVE = 20000 #10000-> 在增加“可有可无”项目的支出后，人工智能希望拥有多少绝对资金盈余
	MONEY_SPENDING_MIN_SURPLUS_TO_ALWAYS_ADD_SHOULD_HAVE = 10000 #20000-> 如果 AI 在绝对货币上有这种盈余，那么无论收入比率如何，增加“应该有”项目的支出总是好的
	MONEY_SPENDING_MIN_SURPLUS_TO_ALWAYS_ADD_WANTS_TO_HAVE = 40000 #40000-> If AI has this surplus in absolute money, it's always fine to increase spending on a 'wants-to-have' project, regardless of income ratio
	MONEY_SPENDING_MIN_SURPLUS_TO_ALWAYS_ADD_NICE_TO_HAVE = 60000 #60000-> If AI has this surplus in absolute money, it's always fine to increase spending on a 'nice-to-have' project, regardless of income ratio
	MONEY_SPENDING_ACCEPTABLE_WAR_DEBT = 0.2 #0.5 如果 AI 的債務上限低於這個百分比，避免在戰爭中為“想要”及以上削減成本
	MONEY_SPENDING_MIN_RATIO_TO_CONSIDER_GOLD_RESERVES = 0.9 #無論其黃金儲備有多麼豐富（處於和平狀態），AI 都需要將收入與支出的比率降到多低才能嘗試削減開支
	MONEY_SPENDING_MIN_WEEKS_OF_GOLD_RESERVES_TO_NOT_REMOVE_SHOULD_HAVE = 20 # 如果我們有足夠的黃金儲備來維持我們目前的支出這麼長時間，就不要減少“應該有”的支出
	MONEY_SPENDING_MIN_WEEKS_OF_GOLD_RESERVES_TO_NOT_REMOVE_WANTS_TO_HAVE = 40 # 如果我們有足夠的黃金儲備來維持我們目前的支出這麼長時間，就不要減少“想要”的支出
	MONEY_SPENDING_MAX_WEEKS_OF_DEBT_TO_ADD_SHOULD_HAVE = 24 #50->24 如果我們有這麼多債務，需要超過這個數週才能還清，不要增加“應該有”的支出
	MONEY_SPENDING_MIN_GOLD_RESERVE_FRACTION_TO_ADD_WANTS_TO_HAVE = 0.2 # 如果我們至少沒有這部分黃金儲備，就不要增加“想要擁有”的支出
	MONEY_SPENDING_MIN_GOLD_RESERVE_FRACTION_TO_ADD_NICE_TO_HAVE = 0.2 # If we don't have at least this fraction of gold reserves, don't increase spending on a 'nice-to-have'
	
	MONEY_SPENDING_LAND_THREAT_THRESHOLD = 1 #0.25 如果一個敵對國家擁有比 AI 多得多的軍隊，它就會想增加軍費開支
	MONEY_SPENDING_NAVY_THREAT_THRESHOLD = 1 # 如果一個敵對國家擁有比 AI 多得多的海軍，它就會想增加軍費開支
	MONEY_SPENDING_PRESTIGE_RIVAL_THRESHOLD = 0.75 #0.5-> 如果競爭對手的聲望比 AI 高得多，它就想增加對藝術院校的支出
	MONEY_SPENDING_TECH_RIVAL_THRESHOLD = 0.5 #原版沒有# 如果競爭對手每週的創新比 AI 多得多，它就想增加對大學的支出
	
	MONEY_SPENDING_MILITARY_CRITICAL_THRESHOLD = 1 #0.5-> # 如果軍營/海軍基地的實際數量低於這個數量，AI 將不會考慮進一步縮小規模
	MONEY_SPENDING_CONSTRUCTION_CRITICAL_THRESHOLD = 0.2 #0.25 -> 0.2 # 如果建築部門建築物的實際數量低於此數量，AI 認為獲得更多建築非常重要
	MONEY_SPENDING_INNOVATION_CRITICAL_THRESHOLD = 0.25 # 如果innovation production compared to cap比这个还差，AI认为提升很重要
	MONEY_SPENDING_INNOVATION_DESIRED_THRESHOLD = 0.75 # 如果與 cap 相比的創新生產比這更糟糕，AI 認為改進很重要	
	MONEY_SPENDING_SUPPLY_NETWORK_CRITICAL_THRESHOLD = 0.75 # 如果供應網絡比這更糟，AI 認為改進它至關重要
	MONEY_SPENDING_SUPPLY_NETWORK_DESIRED_THRESHOLD = 1 #1.25 ->1 #如果供應網絡比這更糟，AI 想改善它
	MONEY_SPENDING_BUREAUCRACY_CRITICAL_THRESHOLD = 1.0 # # 如果官僚機構的收支比更糟，AI 認為改善它至關重要
	MONEY_SPENDING_BUREAUCRACY_DESIRED_THRESHOLD = 1.25 # 如果官僚收支比比這更糟，AI 想改善它
	MONEY_SPENDING_BUREAUCRACY_EXCESSIVE_THRESHOLD = 1.5 #1.20->1.5 如果官僚收支比好於此，人工智能將不會改善它
	MONEY_SPENDING_INFRASTRUCTURE_CRITICAL_THRESHOLD = 1.0 # 0.8->1.0如果基礎設施生產使用情況比這更糟，AI 認為改進它至關重要
	MONEY_SPENDING_INFRASTRUCTURE_DESIRED_THRESHOLD = 1.2 # If infra production to usage is worse than this, AI wants to improve it
	PRODUCTION_goods_output_WANTED_INDUSTRIAL_GOODS_FACTOR = 1 #0.25-> 为该国未过度生产并被建筑物使用的每单位货币价值的工业产品，将此值添加到建筑物中
	PRODUCTION_goods_output_WANTED_MILITARY_GOODS_FACTOR = 1 #0.25-> 为该国未过度生产且被建筑物使用的每单位货币价值的军事物资将此价值添加到建筑物
	PRODUCTION_goods_output_NEEDED_INDUSTRIAL_GOODS_FACTOR = 2 # 0.25 为该国生产不足并由建筑物使用的每单位货币价值的工业产品，将此值添加到建筑物中
	PRODUCTION_goods_output_NEEDED_MILITARY_GOODS_FACTOR = 2 #0.5 为该国生产不足并由建筑物使用的每单位货币价值的军事物资将此价值添加到建筑物
	PRODUCTION_METHOD_FAVORED_MILITARY_GOODS_FACTOR = 2.0 #1.0 每基础成本 * AI 青睐的商品生产单位（对于军用商品）
	
	# Below data is used to calculate how much weight the AI places on promoting an IG
	PROMOTION_BASE_VALUE = 50
	
	# Below data is used to calculate how much weight the AI places on suppressing an IG
	SUPPRESSION_BASE_VALUE = 75
	
	# 以下數據用於計算人工智能對消費稅的重視程度
	CONSUMPTION_TAX_INCOME_VALUE = 5 #10 ->5 應稅價值中國家支出的百分比（然後乘以商品的相對權威成本）
	CONSUMPTION_TAX_STAPLE_MULT = 0.25 # 0.5->0.25由此增加对主要商品征税的愿望
	CONSUMPTION_TAX_LUXURY_MULT = 1 # 2.0 -> 1 以此乘以对奢侈品征税的愿望
	CONSUMPTION_TAX_LOW_INCOME_THRESHOLD = 1.5 # 1.25 ->1.50 必须征收消费税的收入支出门槛
	CONSUMPTION_TAX_HIGH_INCOME_THRESHOLD = 0.8 #1.5 -> 0.8 应取消消费税的收入支出门槛（如果取消不会使我们低于此门槛）
	CONSUMPTION_TAX_MAX_NUM_TAXED_GOODS_BASE = 0 # AI 想要征税的商品的基本最大数量
	CONSUMPTION_TAX_MAX_NUM_TAXED_GOODS_PER_MISSING_TAX_TYPE = 2 # 添加到最大商品数量 AI 想要对它不征收的每种其他类型的税征税
	
}

NWar = {

	DAYS_BETWEEN_WAR_EXHAUSTION = 15 #7 # 每隔這麼多天，戰爭支持就會被厭戰公式減少
	WAR_EXHAUSTION_BASE = 0.1 #0.25
	WAR_EXHAUSTION_KIA_FACTOR = 10.0 #25
	WAR_EXHAUSTION_TURMOIL_FACTOR = 2.0 # At 100% turmoil
	WAR_EXHAUSTION_OCCUPATION_FACTOR = 10.0
	WAR_EXHAUSTION_CONTESTED_ENEMY_WARGOALS = 4.0 # 2.0
	OCCUPATION_STATE_BASE_WEIGHT = 1
	OCCUPATION_STATE_POP_WEIGHT = 1
	OCCUPATION_STATE_INCORPORATED_WEIGHT = 10
	
	STATE_CONQUEST_HOMELAND_AND_CLAIM_RADICALIZATION = 0.1
	STATE_CONQUEST_HOMELAND_AND_CLAIM_DEMILITARIZATION = 0.25
	STATE_CONQUEST_HOMELAND_OR_CLAIM_RADICALIZATION = 0.2
	STATE_CONQUEST_HOMELAND_OR_CLAIM_DEMILITARIZATION = 0.5
	STATE_CONQUEST_DEFAULT_RADICALIZATION = 0.4
	STATE_CONQUEST_DEFAULT_DEMILITARIZATION = 0.75
}

NMilitary = {
	BATTLE_PROVINCES_TAKEN_THEATER_UNIT_SCALE = 1.5 #2 # 戰區省份佔領的省份數量/（戰區單位 * this-define ）
	BATTLE_PROVINCES_TAKEN_THEATER_MIN_SCALE = 0.3 #0.5 #由於上述原因，佔領的省份數量不能乘以小於此數
	BATTLE_PROVINCES_TAKEN_MAX_EXTRA = 0                  # 如果選擇的省份會造成分裂，則佔領新的戰區，只要它最多有 BATTLE_PROVINCES_TAKEN_MAX_EXTRA 個省份。這可能不遵守距離限制 (BATTLE_PROVINCES_TAKEN_MAX_DEPTH)。
}